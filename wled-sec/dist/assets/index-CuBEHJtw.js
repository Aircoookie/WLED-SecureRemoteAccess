(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))i(t);new MutationObserver(t=>{for(const n of t)if(n.type==="childList")for(const s of n.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&i(s)}).observe(document,{childList:!0,subtree:!0});function r(t){const n={};return t.integrity&&(n.integrity=t.integrity),t.referrerPolicy&&(n.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?n.credentials="include":t.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function i(t){if(t.ep)return;t.ep=!0;const n=r(t);fetch(t.href,n)}})();var d;async function l(){var e=document.getElementById("password").value;const o=new TextEncoder().encode(e),r=new TextEncoder().encode("testsalt");var i=+document.getElementById("iterations").value;d=await h(o,r,i)}async function h(e,o,r){var i=performance.now();const t=await crypto.subtle.importKey("raw",e,"PBKDF2",!1,["deriveKey"]);var n={name:"PBKDF2",salt:o,iterations:r,hash:"SHA-256"},s={name:"HMAC",hash:"SHA-256",length:256};const c=await crypto.subtle.deriveKey(n,t,s,!0,["sign","verify"]);return crypto.subtle.exportKey("raw",c).then(function(m){var g=Array.from(new Uint8Array(m)).map(function(y){return("0"+(y&255).toString(16)).slice(-2)}).join(""),f=performance.now();document.getElementById("info").textContent="Hashing with "+r+" iterations took "+(f-i)+" ms",document.getElementById("hash").textContent=g}),c}async function p(e,o){var r=performance.now();const i=new TextEncoder().encode(e),t=await crypto.subtle.sign("HMAC",o,i);var n=Array.from(new Uint8Array(t)).map(function(c){return("0"+(c&255).toString(16)).slice(-2)}).join(""),s=performance.now();return document.getElementById("hmacInfo").textContent="HMAC generation took "+(s-r)+" ms",document.getElementById("hmac").textContent=n,n}async function u(e){if(e||(e=document.getElementById("message").value),!d)throw new Error("Please hash the password first");return p(e,d)}function w(e){console.log(`Received message: ${e.data}`),console.log(`origin: ${e.origin}`);try{var o=JSON.parse(e.data)}catch(r){console.log(`Error parsing JSON: ${r}`);return}o["wled-ui"]==="onload"?e.source.postMessage('{"wled-rc":"ready"}',{targetOrigin:e.origin}):o["wled-ui"]==="hmac-req"&&u(JSON.stringify(o.msg)).then(r=>{var i={"wled-rc":"hmac",msg:o.msg,mac:r};e.source.postMessage(JSON.stringify(i),{targetOrigin:e.origin})})}let v=document.querySelector("#hostInput");async function B(){document.getElementById("connectionInfo").textContent="Connecting...",await l();let e="http://"+v.value;try{new URL(e)}catch{document.getElementById("connectionInfo").textContent="Invalid URL";return}window.open(e,"wled-ui")?document.getElementById("connectionInfo").innerHTML="&#10004; Opened UI tab":document.getElementById("connectionInfo").textContent="Failed to open window"}let E=document.querySelector("#hashButton");E.addEventListener("click",()=>l());let I=document.querySelector("#hmacButton");I.addEventListener("click",()=>u());let C=document.querySelector("#connectButton");C.addEventListener("click",()=>B());let a=document.querySelector("#testingToggle");a.addEventListener("click",()=>{let e=document.getElementById("testingDiv");e.style.display!="block"?(e.style.display="block",a.textContent="Hide testing controls"):(e.style.display="none",a.textContent="Show testing controls")});onmessage=e=>{w(e)};
